#!/usr/bin/python

import os
import sys
if 'PYERECTOR_PATH' in os.environ and \
        os.path.isdir(os.environ['PYERECTOR_PATH']):
    for i, p in enumerate(sys.path):
        if p.find('pyerector') != -1:
            sys.path[i] = os.environ['PYERECTOR_PATH']
from pyerector import *

class Regression(Target):
    """Regression testing."""
    def run(self):
        import os
        subtasks = []
        for fname in os.listdir(V['basedir']):
            sdir = self.join(fname)
            if os.path.isdir(sdir) and \
               os.path.isfile(os.path.join(sdir, 'pyerect')):
                subtasks.append(
                    Echo('Calling %s/pyerect', sdir)
                )
                subtasks.append(
                    SubPyErector('all', wdir=sdir)
                )
        tasks = Parallel(*tuple(subtasks))
        if callable(tasks):
            tasks()
        else:
            tasks.run(self, None, None, None)

All.dependencies = (Regression,)
Default.dependencies = (Regression,)

PyErector()
